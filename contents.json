{
  "合わないことをやっていないか？": "# 合わないことをやっていないか？\n- 仕事もプライベートも\n- 今持っている選択肢が良い選択肢なのか？\n- 使っているツールは、ニーズや体質に合っているか？\n- 体質を理解しているか？\n- ストイックにやりすぎて、何か機会損失していないか？",
  "活動量": "# 活動量\n- 動けば動くほど活発になるが、過活動になる\n- 引きこもってるほど気力が無くなる\n- バランスをとるのが難しい\n  - ここまでセーブしよう(かんばればできる）\n  - 最低限これをやろう（こっちの方が大変）",
  "スケジューリングが楽になる方法5選": "# スケジューリングが楽になる方法5選\n- お店のスタンプカードや期間限定のキャンペーンを利用してなかなかできないことをやってのける\n- 年初に種類別の予算を確保して、複数口座に分け、デビットカードで予算を使い切っていく\n- 相手を巻き込んで進捗飲み会を定期開催する\n- ChatGPTに確定したスケジュールを全部インプットさせて、開いてる時間で何をするかを相談する\n- 思いっきり何もしない時間を1年の随所に20回ぐらい入れてみる",
  "聞いてもらってばかりで申し訳ない、とは": "# 聞いてもらってばかりで申し訳ない、とは\n- 前提：相手は、話をよく聞いてくれる人\n- 「人は最後まで話を聞かないものだ」という信念と\n- 「自分は多弁である」という認識がある\n- 話しやすい相手だから、つい色々、早口で喋ってしまうけど\n- 「沢山喋ると疲れる」という特性があるので\n- 「ペースダウンしたい」と自分に言い聞かせたいのだ",
  "Home": "# Home\n",
  "以下に、内容を整理・言い回しを統一して、読みやすくリライトしたものを提示します。": "以下に、内容を整理・言い回しを統一して、読みやすくリライトしたものを提示します。\n\n---\n\n# このサイトの作り方\n\n## 1. 事前準備（ブラウザだけでOK）\n\n* GitHubアカウントを[作成](https://github.com/signup)\n  → リポジトリを[作成](https://github.com/new)（名前は `wiki` や `diary` などでOK）\n\n* 任意：独自ドメインを取得（お名前.com や ムームードメイン等）\n  → 有料なので必須ではありません\n\n---\n\n## 2. パソコンでやること\n\n### Visual Studio Code（VSCode）\n\n* [インストール](https://code.visualstudio.com/download)\n  → 初回起動時に「日本語にする？」と出るので「Yes」\n\n* GitHub Copilot拡張機能を[追加](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot)\n  → GitHubアカウントでログイン\n  → AIにコード生成を手伝ってもらえる超便利ツール\n\n* Live Server拡張機能を[追加](https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer)\n  → コードを編集した瞬間にブラウザ表示が更新される\n\n---\n\n### GitHub Desktop\n\n* [インストール](https://github.com/apps/desktop?ref_cta=download+desktop&ref_loc=installing+github+desktop&ref_page=docs)してGitHubアカウントでログイン\n* さっき作ったリポジトリを「Clone」（手元にコピー）\n* コードを編集した後は「Push」でアップロードする\n* Ctrl + Shift + A で VSCode を開く（ショートカット）\n\n---\n\n### 実際にサイトを作ってみる\n\n1. VSCodeで新規ファイル（Ctrl+N）→ `index.html` と入力して保存（Ctrl+S → Enter）\n\n2. Ctrl + Shift + I で Copilot チャット画面を開く\n\n3. 例えば以下のようなプロンプトを入力：\n\n   ```\n   素のHTML/JS/CSSでブログを作って。データは contents.json に保存してほしい。ロード時には GitHub 上の contents.json を fetch。画面は横幅1000pxのボックスで、クリックでTextArea化→編集→自動保存（gh_tokenはLocalStorageに入れてある）\n   ```\n\n4. コードが生成されたら「確定」→ 右下の「Go Live」クリック\n   → ブラウザが開き、ローカルで動作確認できる！\n\n5. あとは、Copilotに追加指示を出していけば機能がどんどん増える\n\n---\n\n## 3. 公開する（GitHub Pages）\n\n1. GitHubのリポジトリページ → `Settings` → `Pages` を開く\n2. \"Source\" を `main` ブランチ + `/root` または `/docs` に設定\n3. 「Your site is live at ...」というURLが表示されたら、そこにアクセスすれば公開完了！\n\n---\n\n## 4. よくあるトラブル\n\n* GitHub Pagesが表示されない\n  → `index.html` がルートにあるか？ 名前が正しいか？\n\n* `contents.json`が読み込めない\n  → API制限、CORS、トークン設定などを確認\n  → DevTools（F12）のConsoleやNetworkを確認\n\n* `gh_token`が効かない\n  → ブラウザのConsoleで手動設定\n\n  ```js\n  localStorage.setItem(\"gh_token\", \"ここにアクセストークン\");\n  ```\n\n---\n\n## 5. 補足Tips\n\n* **Copilotとの付き合い方**\n  → 要件をできるだけ具体的に書くと、精度が上がる\n\n* **コードが増えたら**\n  → HTML, CSS, JSを分離して管理する（`index.html`, `style.css`, `script.js`）\n\n* **レスポンシブ対応したいなら**\n  → CSSの`@media`クエリやJavaScriptの`window.innerWidth`を活用\n\n---\n\n## まとめ\n\n* GitHub × VSCode × Copilot で、AIと一緒にサイトを作れる\n* Live Serverで即座に見た目確認、GitHub Pagesでそのまま公開\n* 「最初の1歩さえ踏み出せば、あとは思ったより簡単」\n* 作って壊して直していくうちに、自然とスキルも付いてくる！\n\n---\n"
}